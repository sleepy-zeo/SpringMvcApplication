<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="org.piper.springmvc"/>

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/static/html/"/>
        <property name="suffix" value=".html"/>
    </bean>

    <!--
        配置访问静态资源，即可以访问web目录下除WEB-INF文件夹下的任意资源文件
        注意有些格式的文件可能不支持，对于不支持的格式，可以单独在web.xml添加如下配置
        <servlet-mapping>
	        <servlet-name>default</servlet-name>
	        <url-pattern>/static/favicon.ico</url-pattern>
        </servlet-mapping>
    -->
    <mvc:default-servlet-handler/>

    <!--
        框架会注册RequestMappingHandlerMapping和RequestMappingHandlerAdapter用于处理@RequestMapping
        3) 前端控制器(DispatcherServlet)找到处理器映射器(HandlerMapping)，由处理器映射器通过url找到对应的处理器(Handler，
        也即Controller)，返回处理器执行链(HandlerExecutionChain，包括一组HandlerInterceptor和一个Handler)给前端控制器
        4) 前端控制器请求处理器适配器(HandlerAdapter)执行处理器，然后处理器返回一个ModelAndView给前端控制器
        5) 前端控制器调用视图解析器(ViewResolver)解析返回的视图...
    -->
    <mvc:annotation-driven/>

    <!-- spring 定时器开关 -->
    <task:annotation-driven/>
    <!-- 任务调度器-->
    <task:scheduler id="piper:scheduler" pool-size="10"/>


    <!-- 文件上传解析器，必须配置id，且名称必须为multipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--
            文件上传大小，单位为字节
            这里设置为10GB大小
        -->
        <property name="maxUploadSize" value="10240000000"/>
    </bean>

    <mvc:interceptors>
        <!-- 配置2个拦截器 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="org.piper.springmvc.interceptor.PiperInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>